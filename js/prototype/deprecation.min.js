var DeprecationNotifier={logDeprecation:true,MessageTemplate:new Template("Prototype #{type} Warning: #{message}\n#{stack}"),Regexp:new RegExp("@"+window.location.protocol+".*?\\d+\\n","g"),init:function(a){if(!Prototype.Browser.Gecko){return}a.each(function(f){var h=f.condition,c=f.type||"deprecation",e=f.message,b=f.namespace,g=f.methodName;b[g]=(b[g]||function(){}).wrap(function(i){var d=$A(arguments).splice(1);if(!h||h.apply(this,d)){DeprecationNotifier.notify(e,c)}return i.apply(i,d)})});Element.addMethods()},notify:function(b,a){if(a=="deprecation"&&!DeprecationNotifier.logDeprecation){return false}this.log(this.MessageTemplate.evaluate({message:b,stack:this.getStack(),type:a.capitalize()}),a);return true},getStack:function(){try{throw new Error("stack")}catch(a){return a.stack.match(this.Regexp).reject(function(b){return/(prototype|unittest|deprecation)\.js/.test(b)}).join("\n")}},log:function(b,a){if(a==="removal"){console.error(b)}else{console.warn(b)}}};DeprecationNotifier.init([{methodName:"display",namespace:Toggle,message:"Toggle.display has been deprecated, please use Element.toggle instead."},{methodName:"show",namespace:Element.Methods,message:'Passing an arbitrary number of elements to Element.show is no longer supported.\nUse [id_1, id_2, ...].each(Element.show) or $(id_1, id_2, ...).invoke("show") instead.',type:"removal",condition:function(){return arguments.length>1&&!Object.isNumber(arguments[1])}},{methodName:"hide",namespace:Element.Methods,message:'Passing an arbitrary number of elements to Element.hide is no longer supported.\nUse [id_1, id_2, ...].each(Element.hide) or $(id_1, id_2, ...).invoke("hide") instead.',type:"removal",condition:function(){return arguments.length>1&&!Object.isNumber(arguments[1])}},{methodName:"toggle",namespace:Element.Methods,message:'Passing an arbitrary number of elements to Element.toggle is no longer supported.\nUse [id_1, id_2, ...].each(Element.toggle) or $(id_1, id_2, ...).invoke("toggle") instead.',type:"removal",condition:function(){return arguments.length>1&&!Object.isNumber(arguments[1])}},{methodName:"clear",namespace:Form.Element.Methods,message:'Passing an arbitrary number of elements to Field.clear is no longer supported.\nUse [id_1, id_2, ...].each(Form.Element.clear) or $(id_1, id_2, ...).invoke("clear") instead.',type:"removal",condition:function(){return arguments.length>1&&!Object.isNumber(arguments[1])}},{methodName:"present",namespace:Form.Element.Methods,message:'Passing an arbitrary number of elements to Field.present is no longer supported.\nUse [id_1, id_2, ...].each(Form.Element.present) or $(id_1, id_2, ...).invoke("present") instead.',type:"removal",condition:function(){return arguments.length>1&&!Object.isNumber(arguments[1])}},{methodName:"childOf",namespace:Element.Methods,message:"Element#childOf has been deprecated, please use Element#descendantOf instead."},{methodName:"Before",namespace:Insertion,message:"Insertion.Before has been deprecated, please use Element#insert instead."},{methodName:"Top",namespace:Insertion,message:"Insertion.Top has been deprecated, please use Element#insert instead."},{methodName:"Bottom",namespace:Insertion,message:"Insertion.Bottom has been deprecated, please use Element#insert instead."},{methodName:"After",namespace:Insertion,message:"Insertion.After has been deprecated, please use Element#insert instead."},{methodName:"prepare",namespace:Position,message:"Position.prepare has been deprecated."},{methodName:"within",namespace:Position,message:"Position.within has been deprecated."},{methodName:"withinIncludingScrolloffsets",namespace:Position,message:"Position.withinIncludingScrolloffsets has been deprecated."},{methodName:"overlap",namespace:Position,message:"Position.overlap has been deprecated."},{methodName:"cumulativeOffset",namespace:Position,message:"Position.cumulativeOffset has been deprecated, please use Element#cumulativeOffset instead."},{methodName:"positionedOffset",namespace:Position,message:"Position.positionedOffset has been deprecated, please use Element#positionedOffset instead."},{methodName:"absolutize",namespace:Position,message:"Position.absolutize has been deprecated, please use Element#absolutize instead."},{methodName:"relativize",namespace:Position,message:"Position.relativize has been deprecated, please use Element#relativize instead."},{methodName:"realOffset",namespace:Position,message:"Position.realOffset has been deprecated, please use Element#cumulativeScrollOffset instead."},{methodName:"offsetParent",namespace:Position,message:"Position.offsetParent has been deprecated, please use Element#getOffsetParent instead."},{methodName:"page",namespace:Position,message:"Position.page has been deprecated, please use Element#viewportOffset instead."},{methodName:"clone",namespace:Position,message:"Position.clone has been deprecated, please use Element#clonePosition instead."},{methodName:"initialize",namespace:Element.ClassNames.prototype,message:"Element.ClassNames has been deprecated."},{methodName:"classNames",namespace:Element.Methods,message:"Element#classNames has been deprecated.\nIf you need to access CSS class names as an array, try: $w(element.classname)."},{methodName:"setStyle",namespace:Element.Methods,message:"Use of uncamelized style-property names is no longer supported.\nUse either camelized style-property names or a regular CSS string instead (see online documentation).",type:"removal",condition:function(a,b){return !Object.isString(b)&&Object.keys(b).join("").include("-")}},{methodName:"getElementsByClassName",namespace:document,message:"document.getElementsByClassName has been deprecated, please use $$ instead."},{methodName:"getElementsByClassName",namespace:Element.Methods,message:"Element#getElementsByClassName has been deprecated, please use Element#select instead."},{methodName:"immediateDescendants",namespace:Element.Methods,message:"Element#immediateDescendants has been deprecated, please use Element#childElements instead."},{methodName:"getElementsBySelector",namespace:Element.Methods,message:"Element#getElementsBySelector has been deprecated, please use Element#select instead."},{methodName:"toQueryString",namespace:Hash,message:"Hash.toQueryString has been deprecated.\nUse the instance method Hash#toQueryString or Object.toQueryString instead."},{methodName:"remove",namespace:Hash.prototype,message:"Hash#remove is no longer supported, use Hash#unset instead.\nPlease note that Hash#unset only accepts one argument.",type:"removal"},{methodName:"merge",namespace:Hash.prototype,message:"Hash#merge is no longer destructive: it operates on a clone of the Hash instance.\nIf you need a destructive merge, use Hash#update instead.",type:"modification"},{methodName:"unloadCache",namespace:Event,message:"Event.unloadCache has been deprecated."}]);(function(){if(!Prototype.Browser.Gecko){return}var d=Object.keys(Hash.prototype).concat(["_object","__properties"]);var c={setting:new Template("Directly setting a property on an instance of Hash is no longer supported.\nPlease use Hash#set('#{property}', #{value}) instead."),getting:new Template("Directly accessing a property of an instance of Hash is no longer supported.\nPlease use Hash#get('#{property}') instead.")};function a(h,g){var f=c[arguments.length==1?"getting":"setting"].evaluate({property:h,value:Object.inspect(g)});DeprecationNotifier.notify(f,"removal")}function e(f,g){if(f.__properties.include(g)){return}f.__properties.push(g);f.__defineGetter__(g,function(){b(this);a(g)});f.__defineSetter__(g,function(h){b(this);a(g,h)})}function b(g){var f=Object.keys(g);if(f.length==g.__properties.length){return}f.each(function(h){if(g.__properties.include(h)){return}a(h,g[h]);e(g,h)})}Hash.prototype.set=Hash.prototype.set.wrap(function(f,h,g){e(this,h);return f(h,g)});$w("merge update").each(function(f){Hash.prototype[f]=Hash.prototype[f].wrap(function(h,g){for(var i in g){e(this,i)}return h(g)})});$H(Hash.prototype).each(function(g){var f=g.key;if(!Object.isFunction(g.value)||f=="initialize"){return}Hash.prototype[f]=Hash.prototype[f].wrap(function(h){b(this);return h.apply(h,$A(arguments).splice(1))})});Hash.prototype.initialize=Hash.prototype.initialize.wrap(function(g,f){this.__properties=d.clone();for(var h in f){e(this,h)}g(f)})})();